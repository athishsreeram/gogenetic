package gogfile

import (
	"strconv"
	"strings"
)

func javaFileloc(templateFile string, apiName string) string {
	if strings.Contains(templateFile, "application") {
		return "src/main/java/com/gogenetic/restful/"
	}
	if strings.Contains(templateFile, "domainmodel") {
		return "src/main/java/com/gogenetic/restful/" + strings.ToLower(apiName) + "/"
	}
	if strings.Contains(templateFile, "repository") {
		return "src/main/java/com/gogenetic/restful/" + strings.ToLower(apiName) + "/"
	}
	if strings.Contains(templateFile, "service") {
		return "src/main/java/com/gogenetic/restful/" + strings.ToLower(apiName) + "/"
	}
	if strings.Contains(templateFile, "controller") {
		return "src/main/java/com/gogenetic/restful/" + strings.ToLower(apiName) + "/"
	}
	if strings.Contains(templateFile, "model") {
		return "src/main/java/com/gogenetic/restful/" + strings.ToLower(apiName) + "/model/"
	}
	if strings.Contains(templateFile, "mapstruct") {
		return "src/main/java/com/gogenetic/restful/" + strings.ToLower(apiName) + "/"
	}
	if strings.Contains(templateFile, "config") {
		return "src/main/resources/"
	}
	return ""
}

func javaFileName(templateFile string, conf AutoGenerated) string {
	if strings.Contains(templateFile, "pom") {
		return "pom.xml"
	}
	if strings.Contains(templateFile, "proto-") {
		return conf.API.Name + "-service.proto"
	}
	if strings.Contains(templateFile, "docker") {
		return "Dockerfile"
	}
	if strings.Contains(templateFile, "application") {
		return "Application.java"
	}
	if strings.Contains(templateFile, "domainmodel") {
		return conf.DomainModels.DomainModel[0].Name + ".java"
	}
	if strings.Contains(templateFile, "repository") {
		return conf.DomainModels.DomainModel[0].Name + "Repository.java"
	}
	if strings.Contains(templateFile, "service") {
		return conf.API.Name + "Service.java"
	}
	if strings.Contains(templateFile, "controller") {
		return conf.API.Name + "Controller.java"
	}
	if strings.Contains(templateFile, "mapstruct") {
		return conf.API.Name + "Mapper.java"
	}
	if strings.Contains(templateFile, "config") {
		return "application.properties"
	}
	if strings.Contains(templateFile, "model") {
		i2, err := strconv.Atoi(conf.Models.Index)
		if err != nil {
			panic(err)
		}
		return conf.Models.Model[i2].Name + ".java"
	}
	return ""
}
